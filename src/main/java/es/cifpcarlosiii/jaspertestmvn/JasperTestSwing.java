/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.cifpcarlosiii.jaspertestmvn;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author Juan
 */
public class JasperTestSwing extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public JasperTestSwing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pdfButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        statusAnimationLabel = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pdfButton.setText("PDF");
        pdfButton.setEnabled(false);
        pdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print");
        printButton.setToolTipText("");
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(pdfButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadButton)
                        .addGap(0, 191, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(statusAnimationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pdfButton)
                    .addComponent(printButton)
                    .addComponent(loadButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusAnimationLabel)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfButtonActionPerformed
        final JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF Files", "pdf");
        chooser.setFileFilter(filter);
        try {
            if(chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
            {
                // Fichero seleccionado
                File file = chooser.getSelectedFile();

                // Exporto
                JasperExportManager.exportReportToPdfStream(jasperPrint, new FileOutputStream(file));

                // Muestro mensaje de éxito
                setError("Fichero " + file + " guardado." );
            }
        } catch (Exception ex) {
            Logger.getLogger(JasperTestSwing.class.getName()).log(Level.SEVERE, null, ex);
            setError("Error: No se puede guardar. " + ex.getMessage());
        }
    }//GEN-LAST:event_pdfButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            JasperPrintManager.printReport(jasperPrint, true);
        } catch (Exception ex ){
            Logger.getLogger(JasperTestSwing.class.getName()).log(Level.SEVERE, null, ex);
            setError("Error: No se puede imprimir. " + ex.getMessage());
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // Activo progress bar
        setBusy(true, "Cargando informe...");
        // Desactivo el botón de carga
        loadButton.setEnabled(false);

        // Como la carga del formulario tarda, la meto en un worker
        SwingWorker worker = new JasperTestSwing.MiReportLoader();
        worker.execute();
    }//GEN-LAST:event_loadButtonActionPerformed

    private void setBusy(boolean b, String msg) {
        statusAnimationLabel.setForeground(Color.BLACK);
        statusAnimationLabel.setText(msg);
        jProgressBar.setIndeterminate(b);
        loadButton.setEnabled(!b);
    }

    class MiReportLoader extends SwingWorker<Void, Void> {

        @Override
        protected Void doInBackground() throws Exception {
            JasperTestLoader jtl = new JasperTestLoader();
            jtl.load();

            jasperPrint = jtl.getJasperPrint();
            reporte     = jtl.getReporte();
            
            return null;
        }        
        
        @Override
        public void done() {
            // Reactivo el botón de carga
            loadButton.setEnabled(true);
            // Para la barra de progreso
            setBusy(false, "");
            try{
                // Con el get consigo capturar las excepciones que
                // hubo en el doInBackground, que no pueden ser
                // capturadas desde éste
                get();

                // Añado el report al frame con el JRViewer
                JRViewer viewer = new JRViewer(jasperPrint);
                viewer.setBounds(jPanel1.getBounds());

                jPanel1.setLayout(new BoxLayout(jPanel1, BoxLayout.X_AXIS));
                jPanel1.removeAll();
                jPanel1.add(viewer);
                jPanel1.revalidate();

                pdfButton.setEnabled(true);
                printButton.setEnabled(true);
            }  catch (Exception ex) {
                setError("Error: No se puede mostrar. Mire su log");
                Logger.getLogger(JasperTestSwing.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }   
    }


    private void setError(String string) {
        statusAnimationLabel.setForeground(Color.RED);
        statusAnimationLabel.setText(string);
    }    

    
    private JasperReport reporte;
    private JasperPrint jasperPrint;
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JasperTestSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JasperTestSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JasperTestSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JasperTestSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(()->new JasperTestSwing().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton pdfButton;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel statusAnimationLabel;
    // End of variables declaration//GEN-END:variables
}
